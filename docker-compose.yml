# version: "3.8"
services:
  ticket:
    build:
      args:
        user: docker
        uid: 1002
      context: .
      dockerfile: DockerFile
    image: ticket
    container_name: ticket-app-carever
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - ticket

  ticket-db:
    image: mysql
    container_name: ticket-carever-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: tickets
      MYSQL_ROOT_PASSWORD: root-password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - 3307:3306
    volumes:
      - ./mysqldata:/var/lib/mysql
    networks:
      - ticket

  ticket-ws:  # Your WebSocket service
    build: # Or image, depending on how you deploy it
      context: .
      dockerfile: ./reverb/DockerFile
    image: ticket-websocket-image
    # restart: unless-stopped
    container_name: ticket-ws-container
    working_dir: /var/www/html
    ports: # If you need to expose it outside docker network for testing
        - 8081:8081
    volumes:
        - ./:/var/www/html
    networks:
      - ticket
    depends_on:
      - ticket
  ticket-nginx:
    image: nginx:alpine
    container_name: ticket-carever-nginx
    restart: unless-stopped
    ports:
      - 8008:80
      - 443:443
    volumes:
      - ./:/var/www
      - ./Docker-Dev/nginx:/etc/nginx/conf.d/
      - ./ssl/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - ./ssl/privkey.pem:/etc/nginx/ssl/privkey.pem
    networks:
      - ticket

networks:
  ticket:
    name: ticket
    driver: bridge

volumes:
  mysqldata:
